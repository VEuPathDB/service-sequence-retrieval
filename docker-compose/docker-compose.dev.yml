version: "3.5"

volumes:
  sequence-retrieval-db:

services:

  minio:
    image: minio/minio
    command: server --console-address ':9001' /data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - internal
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_TOKEN}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}

  minio-create-buckets:
    image: minio/mc
    depends_on:
      - minio
    networks:
      - internal
    environment:
      MINIO_USER: ${S3_ACCESS_TOKEN?required}
      MINIO_PASS: ${S3_SECRET_KEY?required}
      MINIO_BUCKET: ${S3_BUCKET?required}
    entrypoint: >
      /bin/sh -c "
      sleep 1;
      /usr/bin/mc alias set minioc http://minio:9000 $$MINIO_USER $$MINIO_PASS;
      /usr/bin/mc mb minioc/$$MINIO_BUCKET;
      /usr/bin/mc policy set public minioc/$$MINIO_BUCKET;
      exit 0;
      "

  queue-db:
    image: postgres:14.3-alpine3.16
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgresuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_DB: ${POSTGRES_DB:-queuedb}
    volumes:
      - sequence-retrieval-db:/var/lib/postgresql/data
    networks:
      - internal
    labels:
      - "com.centurylinklabs.watchtower.enable=${POSTGRES_WATCHTOWER:-false}"
      - "traefik.enable=false"

  queue:
    image: rabbitmq:3.10.5-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${QUEUE_USER:-rabbituser}
      RABBITMQ_DEFAULT_PASS: ${QUEUE_PASS}
    networks:
      - internal
    labels:
      - "com.centurylinklabs.watchtower.enable=${RABBITMQ_WATCHTOWER:-false}"
      - "traefik.enable=false"

  sequence-retrieval:
    build:
      dockerfile: Dockerfile
      context: ..
    ports:
      - 8080:8080
